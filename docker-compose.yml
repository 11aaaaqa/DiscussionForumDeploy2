services: 
    web-mvc:
       image: ${DOCKER_REGISTRY-}web-mvc
       build: 
         context: .
         dockerfile: src/Web/Web.MVC/Web.MVC/Dockerfile
       labels:
        - traefik.enable=true
        - traefik.http.routers.web-http.rule=Host(`forumium.site`)
        - traefik.http.routers.web-http.entrypoints=web
        - traefik.http.routers.web-https.tls=true
        - traefik.http.routers.web-https.tls.certresolver=cloudflare
        - traefik.http.routers.web-https.entrypoints=websecure
        - traefik.http.routers.web-https.rule=Host(`forumium.site`)
       environment:
         - ASPNETCORE_ENVIRONMENT=Production
       depends_on:
         - register-microservice-api
         - gateway-api
         - grafana
         - prometheus

    gateway-api:
      image: ${DOCKER_REGISTRY-}gateway-api
      build:
        context: .
        dockerfile: src/Gateway/Gateway.Api/Dockerfile
      labels:
        - traefik.enable=true
        - traefik.http.routers.gateway-api-http.rule=Host(`gateway.forumium.site`)
        - traefik.http.routers.gateway-api-http.entrypoints=web
        - traefik.http.routers.gateway-api-https.tls=true
        - traefik.http.routers.gateway-api-https.tls.certresolver=cloudflare
        - traefik.http.routers.gateway-api-https.entrypoints=websecure
        - traefik.http.routers.gateway-api-https.rule=Host(`gateway.forumium.site`)
      environment:
        - ASPNETCORE_ENVIRONMENT=Production

    register-microservice-api:
      image: ${DOCKER_REGISTRY-}register-microservice-api
      build: 
        context: .
        dockerfile: src/Microservices/Register/RegisterMicroservice.Api/Dockerfile
      labels:
        - traefik.enable=true
        - traefik.http.routers.register-microservice-api-http.rule=Host(`register.forumium.site`)
        - traefik.http.routers.register-microservice-api-http.entrypoints=web
        - traefik.http.routers.register-microservice-api-https.tls=true
        - traefik.http.routers.register-microservice-api-https.tls.certresolver=cloudflare
        - traefik.http.routers.register-microservice-api-https.entrypoints=websecure
        - traefik.http.routers.register-microservice-api-https.rule=Host(`register.forumium.site`)
      environment:
        - ASPNETCORE_ENVIRONMENT=Production
      depends_on:
        - postgres-register-microservice
        - rabbitmq
        - gateway-api

    user-microservice-api:
      image: ${DOCKER_REGISTRY-}user-microservice-api
      build:
        context: .
        dockerfile: src/Microservices/User/UserMicroservie.Api/Dockerfile
      labels:
        - traefik.enable=true
        - traefik.http.routers.user-microservice-api-http.rule=Host(`user.forumium.site`)
        - traefik.http.routers.user-microservice-api-http.entrypoints=web
        - traefik.http.routers.user-microservice-api-https.tls=true
        - traefik.http.routers.user-microservice-api-https.tls.certresolver=cloudflare
        - traefik.http.routers.user-microservice-api-https.entrypoints=websecure
        - traefik.http.routers.user-microservice-api-https.rule=Host(`user.forumium.site`)
      environment:
        - ASPNETCORE_ENVIRONMENT=Production
      depends_on:
        - postgres-user-microservice
        - rabbitmq
        - gateway-api

    topic-microservice-api:
      image: ${DOCKER_REGISTRY-}topic-microservice-api
      build:
        context: .
        dockerfile: src/Microservices/Topic/TopicMicroservice.Api/Dockerfile
      labels:
        - traefik.enable=true
        - traefik.http.routers.topic-microservice-api-http.rule=Host(`topic.forumium.site`)
        - traefik.http.routers.topic-microservice-api-http.entrypoints=web
        - traefik.http.routers.topic-microservice-api-https.tls=true
        - traefik.http.routers.topic-microservice-api-https.tls.certresolver=cloudflare
        - traefik.http.routers.topic-microservice-api-https.entrypoints=websecure
        - traefik.http.routers.topic-microservice-api-https.rule=Host(`topic.forumium.site`)
      environment:
        - ASPNETCORE_ENVIRONMENT=Production
      depends_on:
        - postgres-topic-microservice
        - rabbitmq
        - gateway-api

    discussion-microservice-api:
      image: ${DOCKER_REGISTRY-}discussion-microservice-api
      build:
        context: .
        dockerfile: src/Microservices/Discussion/DiscussionMicroservice.Api/Dockerfile
      labels:
        - traefik.enable=true
        - traefik.http.routers.discussion-microservice-api-http.rule=Host(`discussion.forumium.site`)
        - traefik.http.routers.discussion-microservice-api-http.entrypoints=web
        - traefik.http.routers.discussion-microservice-api-https.tls=true
        - traefik.http.routers.discussion-microservice-api-https.tls.certresolver=cloudflare
        - traefik.http.routers.discussion-microservice-api-https.entrypoints=websecure
        - traefik.http.routers.discussion-microservice-api-https.rule=Host(`discussion.forumium.site`)
      environment:
        - ASPNETCORE_ENVIRONMENT=Production
      depends_on:
        - postgres-discussion-microservice
        - rabbitmq
        - gateway-api

    comment-microservice-api:
      image: ${DOCKER_REGISTRY-}comment-microservice-api
      build:
        context: .
        dockerfile: src/Microservices/Comment/CommentMicroservice.Api/Dockerfile
      labels:
        - traefik.enable=true
        - traefik.http.routers.comment-microservice-api-http.rule=Host(`comment.forumium.site`)
        - traefik.http.routers.comment-microservice-api-http.entrypoints=web
        - traefik.http.routers.comment-microservice-api-https.tls=true
        - traefik.http.routers.comment-microservice-api-https.tls.certresolver=cloudflare
        - traefik.http.routers.comment-microservice-api-https.entrypoints=websecure
        - traefik.http.routers.comment-microservice-api-https.rule=Host(`comment.forumium.site`)
      environment:
        - ASPNETCORE_ENVIRONMENT=Production
      depends_on:
        - rabbitmq
        - postgres-comment-microservice
        - gateway-api

    report-microservice-api:
      image: ${DOCKER_REGISTRY-}report-microservice-api
      build:
        context: .
        dockerfile: src/Microservices/Report/ReportMicroservice/Dockerfile
      labels:
        - traefik.enable=true
        - traefik.http.routers.report-microservice-api-http.rule=Host(`report.forumium.site`)
        - traefik.http.routers.report-microservice-api-http.entrypoints=web
        - traefik.http.routers.report-microservice-api-https.tls=true
        - traefik.http.routers.report-microservice-api-https.tls.certresolver=cloudflare
        - traefik.http.routers.report-microservice-api-https.entrypoints=websecure
        - traefik.http.routers.report-microservice-api-https.rule=Host(`report.forumium.site`)
      environment:
        - ASPNETCORE_ENVIRONMENT=Production
      depends_on:
        - rabbitmq
        - postgres-report-microservice
        - gateway-api

    banhistory-microservice-api:
      image: ${DOCKER_REGISTRY-}banhistory-microservice-api
      build:
        context: .
        dockerfile: src/Microservices/BanHistory/BanHistoryMicroservice.Api/Dockerfile
      labels:
        - traefik.enable=true
        - traefik.http.routers.banhistory-microservice-api-http.rule=Host(`banhistory.forumium.site`)
        - traefik.http.routers.banhistory-microservice-api-http.entrypoints=web
        - traefik.http.routers.banhistory-microservice-api-https.tls=true
        - traefik.http.routers.banhistory-microservice-api-https.tls.certresolver=cloudflare
        - traefik.http.routers.banhistory-microservice-api-https.entrypoints=websecure
        - traefik.http.routers.banhistory-microservice-api-https.rule=Host(`banhistory.forumium.site`)
      environment:
        - ASPNETCORE_ENVIRONMENT=Production
      depends_on:
        - rabbitmq
        - postgres-banhistory-microservice
        - gateway-api

    bookmark-microservice-api:
      image: ${DOCKER_REGISTRY-}bookmark-microservice-api
      build:
         context: .
         dockerfile: src/Microservices/Bookmark/BookmarkMicroservice.Api/Dockerfile
      labels:
        - traefik.enable=true
        - traefik.http.routers.bookmark-microservice-api-http.rule=Host(`bookmark.forumium.site`)
        - traefik.http.routers.bookmark-microservice-api-http.entrypoints=web
        - traefik.http.routers.bookmark-microservice-api-https.tls=true
        - traefik.http.routers.bookmark-microservice-api-https.tls.certresolver=cloudflare
        - traefik.http.routers.bookmark-microservice-api-https.entrypoints=websecure
        - traefik.http.routers.bookmark-microservice-api-https.rule=Host(`bookmark.forumium.site`)
      environment:
        - ASPNETCORE_ENVIRONMENT=Production
      depends_on:
         - rabbitmq
         - postgres-bookmark-microservice
         - gateway-api

    postgres-bookmark-microservice:
      container_name: postgres-bookmark-microservice
      image: postgres:latest
      expose:
        - 5432
      environment:
        POSTGRES_USER: gen_user
        POSTGRES_PASSWORD: SxjYtQ4vdG6
        POSTGRES_DB: BookmarkMicroservice
        POSTGRES_HOST: d293f6350ae6810ca35a2783.twc1.net
      volumes: 
        - postgres-bookmark-data:/var/lib/postgresql/data

    postgres-banhistory-microservice:
      container_name: postgres-banhistory-microservice
      image: postgres:latest
      expose:
        - 5432
      environment:
        POSTGRES_USER: gen_user
        POSTGRES_PASSWORD: SxjYtQ4vdG6
        POSTGRES_DB: BanHistoryMicroservice
        POSTGRES_HOST: d293f6350ae6810ca35a2783.twc1.net
      volumes: 
        - postgres-banhistory-data:/var/lib/postgresql/data

    postgres-report-microservice:
      container_name: postgres-report-microservice
      image: postgres:latest
      expose:
        - 5432
      environment:
        POSTGRES_USER: gen_user
        POSTGRES_PASSWORD: SxjYtQ4vdG6
        POSTGRES_DB: ReportMicroservice
        POSTGRES_HOST: d293f6350ae6810ca35a2783.twc1.net
      volumes: 
        - postgres-report-data:/var/lib/postgresql/data

    postgres-comment-microservice:
      container_name: postgres-comment-microservice
      image: postgres:latest
      expose:
        - 5432
      environment:
        POSTGRES_USER: gen_user
        POSTGRES_PASSWORD: SxjYtQ4vdG6
        POSTGRES_DB: CommentMicroservice
        POSTGRES_HOST: d293f6350ae6810ca35a2783.twc1.net
      volumes: 
        - postgres-comment-data:/var/lib/postgresql/data

    postgres-discussion-microservice:
      container_name: postgres-discussion-microservice
      image: postgres:latest
      expose:
        - 5432
      environment:
        POSTGRES_USER: gen_user
        POSTGRES_PASSWORD: SxjYtQ4vdG6
        POSTGRES_DB: DiscussionMicroservice
        POSTGRES_HOST: d293f6350ae6810ca35a2783.twc1.net
      volumes: 
        - postgres-discussion-data:/var/lib/postgresql/data

    postgres-topic-microservice:
      container_name: postgres-topic-microservice
      image: postgres:latest
      expose:
        - 5432
      environment:
        POSTGRES_USER: gen_user
        POSTGRES_PASSWORD: SxjYtQ4vdG6
        POSTGRES_DB: TopicMicroservice
        POSTGRES_HOST: d293f6350ae6810ca35a2783.twc1.net
      volumes: 
        - postgres-topic-data:/var/lib/postgresql/data

    postgres-register-microservice:
       container_name: postgres-register-microservice
       image: postgres:latest
       expose:
        - 5432
       environment:
         POSTGRES_USER: gen_user
         POSTGRES_PASSWORD: SxjYtQ4vdG6
         POSTGRES_DB: RegisterMicroservice
         POSTGRES_HOST: d293f6350ae6810ca35a2783.twc1.net
       volumes: 
         - postgres-register-data:/var/lib/postgresql/data

    postgres-user-microservice:
       container_name: postgres-user-microservice
       image: postgres:latest
       expose:
        - 5432
       environment:
         POSTGRES_USER: gen_user
         POSTGRES_PASSWORD: SxjYtQ4vdG6
         POSTGRES_DB: UserMicroservice
         POSTGRES_HOST: d293f6350ae6810ca35a2783.twc1.net
       volumes: 
         - postgres-user-data:/var/lib/postgresql/data

    postgres-hangfire:
      container_name: postgres-hangfire
      image: postgres:latest
      expose:
        - 5432
      environment:
        POSTGRES_USER: gen_user
        POSTGRES_PASSWORD: SxjYtQ4vdG6
        POSTGRES_DB: Hangfire
        POSTGRES_HOST: d293f6350ae6810ca35a2783.twc1.net
      volumes: 
        - postgres-hangfire-data:/var/lib/postgresql/data

    rabbitmq:
        image: rabbitmq:3-management
        hostname: rabbitmq
        restart: always
        environment:
            - RABBITMQ_HOST=89.169.46.80
            - RABBITMQ_PORT=5672
            - RABBITMQ_USERNAME=gen_user
            - RABBITMQ_PASSWORD=S6PWcaShQ
            - RABBITMQ_VHOST=default_vhost
        volumes:
            - ./rabbitmq:/var/lib/rabbitmq/mnesia
        ports:
            - 15672:15672
            - 5672:5672

    prometheus:
      image: prom/prometheus:latest
      container_name: prometheus
      labels:
        - traefik.enable=true
        - traefik.http.routers.prometheus-http.rule=Host(`prometheus.forumium.site`)
        - traefik.http.routers.prometheus-http.entrypoints=web
        - traefik.http.routers.prometheus-https.tls=true
        - traefik.http.routers.prometheus-https.tls.certresolver=cloudflare
        - traefik.http.routers.prometheus-https.entrypoints=websecure
        - traefik.http.routers.prometheus-https.rule=Host(`prometheus.forumium.site`)
        - traefik.http.routers.prometheus-http.middlewares=prometheus-auth
        - traefik.http.routers.prometheus-https.middlewares=prometheus-auth
        - traefik.http.middlewares.prometheus-auth.basicauth.users=admin:$$2a$$12$$A2qDaFCJUbcOiuKzrEnbuOkKjApCWGg68W8rvaEn/O19dolJ5K3HG
      command:
        - --config.file=/etc/prometheus/prometheus.yml
      volumes:
        - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
        - prometheus-data:/prometheus

    grafana:
      image: grafana/grafana-enterprise
      container_name: grafana
      restart: unless-stopped
      labels:
        - traefik.enable=true
        - traefik.http.routers.grafana-http.rule=Host(`grafana.forumium.site`)
        - traefik.http.routers.grafana-http.entrypoints=web
        - traefik.http.routers.grafana-https.tls=true
        - traefik.http.routers.grafana-https.tls.certresolver=cloudflare
        - traefik.http.routers.grafana-https.entrypoints=websecure
        - traefik.http.routers.grafana-https.rule=Host(`grafana.forumium.site`)
      environment:
        - GF_DATABASE_TYPE=postgres
        - GF_DATABASE_HOST=SxjYtQ4vdG6
        - GF_DATABASE_NAME=DicussionForumGrafana
        - GF_DATABASE_USER=gen_user
        - GF_DATABASE_PASSWORD=d293f6350ae6810ca35a2783.twc1.net
        - GF_SECURITY_ADMIN_USER=admin
        - GF_SECURITY_ADMIN_PASSWORD=changeit
      volumes:
        - grafana-data:/var/lib/grafana

    postgres-grafana:
      image: postgres:latest
      container_name: postgres-grafana
      environment:
        - POSTGRES_DB=DicussionForumGrafana
        - POSTGRES_USER=gen_user
        - POSTGRES_PASSWORD=SxjYtQ4vdG6
      volumes:
        - postgres-grafana-data:/var/lib/postgresql/data
      
    traefik:
      image: traefik:latest
      container_name: traefik
      ports:
        - "80:80"
        - "443:443"
        # - "8080:8080"
      environment:
        - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock:ro
        - ./config/traefik.yaml:/etc/traefik/traefik.yaml:ro
        - ./data/certs/:/var/traefik/certs/:rw

volumes:
  postgres-bookmark-data: {}
  postgres-banhistory-data: {}
  postgres-report-data: {}
  postgres-comment-data: {}
  postgres-discussion-data: {}
  postgres-topic-data: {}
  postgres-register-data: {}
  postgres-user-data: {}
  postgres-hangfire-data: {}
  postgres-grafana-data: {}
  prometheus-data: {}
  grafana-data: {}